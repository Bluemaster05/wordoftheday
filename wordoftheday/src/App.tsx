import { useEffect, useState } from 'react'
import './App.css'
import Madlib from './Madlib'


function App() { 

  const [wordData, setWordData] = useState<any | null>(null)
  // const [websterData, setWebsterData] = useState<any | null>(null)
  const [word, setWord] = useState<string>('')
  const [wordType, setWordType] = useState<string>('')
  const [orgin, setOrgin] = useState<string>('')
  const [definition, setDefinition] = useState<string>('')
  const [example, setExample] = useState<string>('')
  
  async function getWordData() {
    const worddata = await fetch('https://api.wordnik.com/v4/words.json/wordOfTheDay?api_key=imm5y7idawlg99wi0nm73b71ilhytuv4oi2rwo8uycmxncbj5').then(response => response.json())
    let word = worddata.word ?? ''
    let wordtype = worddata.definitions[0].partOfSpeech ?? ''
    let orgin = worddata.note ?? ''
    let definition = worddata.definitions[0].text ?? ''
    let example = worddata.examples[0]?.text ?? ''
    setWord(word)
    setWordType(wordtype)
    setOrgin(orgin)
    setWordData(worddata)
    setDefinition(definition)
    setExample(example)
    console.log(worddata)

  }
  
  useEffect(() => {
    getWordData()
  }, [])

  wordData
  // const handleGetNewWord = () => {
  //   getWordData()

  return (
    <>
      {/* <p>The word of the day is {word} ({wordType})</p>
      <p>Orgin: {orgin}</p>
      <p>Definition: {definition}</p>
      <p>Example: {example}</p> */}

      {/* PLEASE NOTE -- ALL STYLES GENERATED BY GEMINI, MOST LAYOUT GENERATED */}
      <div style={{width: '100vw'}}></div>
      <div className="min-h-screen bg-gradient-to-br from-blue-100 to-purple-200 flex items-center justify-center p-4 font-sans">
      <div className="bg-white rounded-xl shadow-2xl p-6 md:p-8 w-full max-w-xl text-center transform transition-all duration-300 hover:scale-105 hover:shadow-md">
        <h1 className="text-3xl md:text-4xl font-extrabold text-gray-800 mb-6">
          Word of the Day
        </h1>

        {/* {loading && (
          <div className="flex justify-center items-center h-48">
            <div className="animate-spin rounded-full h-12 w-12 border-b-4 border-purple-500"></div>
            <p className="ml-4 text-lg text-gray-600">Loading...</p>
          </div>
        )}

        {error && (
          <div className="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded-md relative mb-4" role="alert">
            <strong className="font-bold">Error!</strong>
            <span className="block sm:inline"> {error}</span>
          </div>
        )} */}

        {word && (
          <>
            <div className="mb-6">
              <h2 className="text-4xl md:text-5xl font-bold text-purple-700 mb-2">
                {word}
              </h2>
              <p className="text-lg md:text-xl text-gray-700 italic mb-3">
                "{definition}"
              </p>
              <p className="text-lg md:text-xl text-gray-700 italic mb-3">
                "{orgin}"
              </p>
              <p className="text-md md:text-lg text-gray-600">
                Example: <span className="font-medium">{example}</span>
              </p>
            </div>
            <Madlib word={word} wordtype={wordType} />
            {/* <button
              onClick={handleGetNewWord}
              className="bg-purple-600 hover:bg-purple-700 text-white font-bold py-3 px-6 rounded-lg shadow-lg transition duration-300 ease-in-out transform hover:-translate-y-1 hover:scale-105 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-opacity-75"
            >
              Get New Word
            </button> */}
          </>
        )}
      </div>
    </div>
    </>
  )
}

export default App
